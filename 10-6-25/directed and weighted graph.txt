import java.util.Hashset;
public classApp{
    public static void  main(String[] args){
class Edge{
    int src;
    inc dest;
    int weight;
    Edge(int src,int dest,int weight){
        this.src=src;
        this.dest=dest;
        this.weight=weight;
    }
    Edge(int src,int dest){
        this.src=src;
        this.dest=dest;
        this.weight=1;
    }
    }
    class Graph{
        HashSet<Edge>graph;
        int vertices;
        boolean isDirected;
        Graph(int vertices,boolean is Directed){
            this.vertices=vertices;
            this.isDirected=isDirected;
            graph=new HashSet<Edge>();
        }
        public void addEdge(int src,int dest){
        if(isValid(src,dest)){
            Edge e=newEdge(src,dest);
            graph.add(e);
            if(!isDirected){
                edge e2=newEdge(dest,src);
                graph.add(e2);
            }
            }else{
                System.out.println("invalid source and destinations");
            }
        }
        public void addEdge(int src,int dest,int weight){
            if(isValid(src,dest)){
                Edge e=newEdge(src,dest,weight);
                graph.add(e);
                if(!isDirected){
                    var e2=newEdge(dest,src,weight);
                    graph.add(e2);
                }
            }else{
                System.out.println("invalid source and destination");
                public boolean isValid(int src,int dest){
                    return src>=0&&dest<vertices&&src!=dest;
                }
            }
                }
            }
            }
            }
    